name: Build and Release CI/CD Pipeline

on:
  push:
    branches:
      - 'main'

jobs:

  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3
      - name: Read VERSION file
        id: getversion
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            sspreitzer/hello-cicd-world:latest
            sspreitzer/hello-cicd-world:${{ steps.getversion.outputs.version }}
    outputs:
      version: ${{ steps.getversion.outputs.version }}

  
  Abnahme:
    runs-on: ubuntu-latest
    needs: Build
    container:
      image: sspreitzer/hello-cicd-world:${{ needs.Build.outputs.version }}
    defaults:
      run:
        shell: bash
        working-directory: /usr/src/app
    steps:
      - name: Check if version file is correct
        run: test "$(cat VERSION)" = "${{ needs.Build.outputs.version }}"
      - name: Run rackup
        run: "rackup --server puma --host localhost --port 80 &"
      - name: Check if version served is correct
        run: sleep 1; curl http://localhost | grep ${{ needs.Build.outputs.version }}
    outputs:
      version: ${{ needs.Build.outputs.version }}


  Release:
    runs-on: ubuntu-latest
    needs: Abnahme
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup kubectl context
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          context: ${{ vars.KUBECONFIG_CONTEXT }}
      - name: Deploy Helm Chart with version
        run: helm upgrade hello-cicd-world ./chart --install --reuse-values --create-namespace --namespace hello-cicd-world --set image.tag=${{ needs.Abnahme.outputs.version }}
